class GameServer{
public:
  void addGame(string name, int numDecks){
    games.push_back(new BlackJack(name, numDecks, new ServerChannel()));
  };

  void join(int typeOfGame, string name){
    clientCount++;
    if(typeOfGame < games.size())
      games.at(typeOfGame)->addPlayer(getPlayer(typeOfGame, name));
    else
      ;
  };
  void startGame(int typeOfGame){
    if(typeOfGame < games.size())
      games.at(typeOfGame)->start();
    else
      ;
  };
  GameServer() : clientCount(0){
  };
    
  //broadcast(int gamenum, string message)
private:
  map<int,string> idToIP; //id to ip mapping to communicate with the user not used for now
  int clientCount;
  vector<CardGame *> games;
    //each game at particular index is of the following type
  Player* getPlayer(int typeOfGame, string name){
    switch(typeOfGame){
    case 0:
      return new BJPlayer(clientCount, name);
    default:
      throw "unknown game type";
    };
  }
};
